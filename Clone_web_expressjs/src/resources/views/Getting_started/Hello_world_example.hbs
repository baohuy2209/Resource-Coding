<div id="page-doc" markdown="1">
  <h1 id="hello-world-example">Hello world example</h1>
  <div class="doc-box doc-info">
    <p>Embedded below is essentially the simplest Express app you can create. It
      is a single file app —
      <em>not</em>
      what you’d get if you use the
      <a href="/en/starter/generator.html">Express generator</a>, which creates
      the scaffolding for a full app with numerous JavaScript files, Jade
      templates, and sub-directories for various purposes.</p>
  </div>
  <script
    async=""
    src="https://embed.runkit.com"
    data-element-id="hello-example"
    data-mode="endpoint"
    defer=""
    type="text/javascript"
  ></script>
  <div id="hello-example"><div
      style="padding: 0px; margin: 0px; border: 0px;"
    ><iframe
        frameborder="0"
        src="https://runkit.com/e/iframe-sha256-1ee7603751d0e1ca08ef01ce31128c89a5a9d24ef886f8050bcdeab4aa17d91f"
        name="runkit-embed-0"
        style="padding: 0px; margin: 0px 0px 0px calc(-100px); border: 0px; height: 276.8px; width: calc(100% + 200px); background: transparent;"
        data-loaded="true"
      ></iframe></div></div>
  <p>This app starts a server and listens on port 3000 for connections. The app
    responds with “Hello World!” for requests to the root URL (<code>/</code>)
    or
    <em>route</em>. For every other path, it will respond with a
    <strong>404 Not Found</strong>.</p>
  <p>The example above is actually a working server: Go ahead and click on the
    URL shown. You’ll get a response, with real-time logs on the page, and any
    changes you make will be reflected in real time. This is powered by
    <a href="https://runkit.com">RunKit</a>, which provides an interactive
    JavaScript playground connected to a complete Node environment that runs in
    your web browser. Below are instructions for running the same app on your
    local machine.</p>
  <div class="doc-box doc-info">
    <p>RunKit is a third-party service not affiliated with the Express project.</p>
  </div>
  <h3 id="running-locally">Running Locally</h3>
  <p>First create a directory named
    <code>myapp</code>, change to it and run
    <code>npm init</code>. Then install
    <code>express</code>
    as a dependency, as per the
    <a href="/en/starter/installing.html">installation guide</a>.</p>
  <p>In the
    <code>myapp</code>
    directory, create a file named
    <code>app.js</code>
    and copy in the code from the example above.</p>
  <div class="doc-box doc-notice">
    <p>The
      <code>req</code>
      (request) and
      <code>res</code>
      (response) are the exact same objects that Node provides, so you can
      invoke
      <code>req.pipe()</code>,
      <code>req.on('data', callback)</code>, and anything else you would do
      without Express involved.</p>
  </div>
  <p>Run the app with the following command:</p>
  <pre><code class="language-console">$ node app.js
    </code></pre>
  <p>Then, load
    <code>http://localhost:3000/</code>
    in a browser to see the output.</p>
  <h3 id="previous-installing-next-express-generator-"><a
      href="/en/starter/installing.html"
    >Previous: Installing </a>&nbsp;&nbsp;&nbsp;&nbsp;<a
      href="/en/starter/generator.html"
    >Next: Express Generator </a></h3>
</div>